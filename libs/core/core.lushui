;; @Task make this a crate
;; @Beacon @Note *never* use `crate` in here: this is not a crate yet but merely a module!

identity (A: Type) (a: A): A = a

constant (A B: Type) (a: A) (b: B): A = a

compose (A B C: Type) (f: A -> B) (g: B -> C) (a: A): C =
    g (f a)

flip (A B C: Type) (f: A -> B -> C) (b: B) (a: A): C =
    f a b

module void

module unit

module bool

module text

module nat

module nat32

module nat64

module int

module int32

module int64

module duple

module triple

module option

module either

module result

module list

module tuple

module vector

module ordering
