{
    "__comment__": "missing parameters, text and number literals",
    "scopeName": "source.lushui",
    "name": "lushui",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#entities"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#punctuation"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.triple-semicolon.lushui",
                    "match": ";;;.*"
                },
                {
                    "__comment__": "Also works: ;;(?!;).*",
                    "name": "comment.block.documentation.lushui",
                    "match": ";;.*"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "__comment__": "Possibly find a better category for 'Parent and 'Root",
                    "match": "'(_|in|of|Parent|Root)\\b",
                    "name": "keyword.other.lushui"
                },
                {
                    "match": "'(foreign|module)\\b",
                    "name": "storage.modifier.lushui"
                },
                {
                    "match": "'as\\b",
                    "name": "keyword.operator.lushui"
                },
                {
                    "match": "'case\\b",
                    "name": "keyword.control.lushui"
                },
                {
                    "match": "'Type\\b",
                    "name": "storage.type.lushui"
                },
                {
                    "__comment__": "Maybe assert that round bracket preceeds the comma with (?<=\\(\\s*)",
                    "match": ",",
                    "name": "storage.modifier.lushui"
                },
                {
                    "match": "[\\.:+\\-~=<>*^!?|/\\\\&#%$@]+",
                    "name": "keyword.operator.lushui"
                },
                {
                    "__comment__": "Also possible: ;(?!;)",
                    "match": ";",
                    "name": "keyword.operator.lushui"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "match": "\\(",
                    "name": "punctuation.grouping.begin.bracket.round.lushui"
                },
                {
                    "match": "\\)",
                    "name": "punctuation.grouping.end.bracket.round.lushui"
                }
            ]
        },
        "entities": {
            "patterns": [
                {
                    "__comment__": "Note that we can add a patterns field containing includes. What effect does it have though?",
                    "match": "('(?:data|let))\\s+([a-zA-Z_][a-zA-Z0-9_]*'*)",
                    "captures": {
                        "1": {
                            "name": "storage.modifier.lushui"
                        },
                        "2": {
                            "name": "entity.name.function.lushui"
                        }
                    }
                },
                {
                    "match": "('hole)\\s+([a-zA-Z_][a-zA-Z0-9_]*'*)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.lushui"
                        },
                        "2": {
                            "name": "entity.name.tag.lushui"
                        }
                    }
                }
            ]
        }
    }
}
