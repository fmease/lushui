{
    "scopeName": "source.lushui",
    "name": "lushui",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#number-literal"
        },
        {
            "include": "#attribute"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#text-literal"
        },
        {
            "include": "#entity"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.documentation.lushui",
                    "match": ";;[^;].*"
                },
                {
                    "name": "comment.line.triple-semicolon.lushui",
                    "match": ";;;(?: (TEST)((?: @\\w+)+)?(?: ((?:pass|fail) (?:check|build|run)|auxiliary|ignore|(?:compiler|program)-(?:args|env-var)|timeout|substution|revisions))(.*))?.*",
                    "captures": {
                        "1": {
                            "name": "keyword.other.lushui-golden-test"
                        },
                        "2": {
                            "name": "meta.attribute.lushui-golden-test meta.annotation.lushui-golden-test meta.decorator.lushui-golden-test variable.language.lushui-golden-test variable.annotation.lushui-golden-test variable.other.lushui-golden-test"
                        },
                        "3": {
                            "name": "keyword.other.lushui-golden-test"
                        },
                        "4": {
                            "name": "variable.other.lushui-golden-test"
                        }
                    },
                    "__comment__": [
                        "@Task Get rid of the golden test highlighting once it's implemented via semantic highlighting"
                    ]
                },
                {
                    "name": "comment.line.shebang.lushui",
                    "match": "\\A#!.*"
                }
            ]
        },
        "number-literal": {
            "patterns": [
                {
                    "name": "constant.numeric.integer.decimal.lushui",
                    "match": "(-|\\b)[0-9]([0-9]|'[0-9])*\\b"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "match": "(?<![\\w\\-])(in|of|self|super|topmost|extern)(?![\\w\\-])",
                    "name": "keyword.other.lushui"
                },
                {
                    "match": "(?<![\\w\\-])(data|let|module|use)(?![\\w\\-])",
                    "name": "storage.modifier.lushui"
                },
                {
                    "match": "(?<![\\w\\-])(for)(?![\\w\\-])",
                    "name": "storage.type.function.lushui"
                },
                {
                    "match": "(?<![\\w\\-])(For)(?![\\w\\-])",
                    "name": "storage.type.lushui"
                },
                {
                    "match": "(?<![\\w\\-])as(?![\\w\\-])",
                    "name": "keyword.operator.lushui"
                },
                {
                    "match": "(?<![\\w\\-])(case|do)(?![\\w\\-])",
                    "name": "keyword.control.lushui"
                },
                {
                    "match": "[\\.:+~=<>*^!?|/\\\\&#%$@]|(?<!\\w)-(?![a-z-A-Z_])",
                    "name": "keyword.operator.lushui"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "match": "\\(",
                    "name": "punctuation.brackets.round.lushui"
                },
                {
                    "match": "\\)",
                    "name": "punctuation.brackets.round.lushui"
                },
                {
                    "match": "\\[",
                    "name": "punctuation.brackets.square.lushui"
                },
                {
                    "match": "\\]",
                    "name": "punctuation.brackets.square.lushui"
                },
                {
                    "match": "\\{",
                    "name": "punctuation.brackets.curly.lushui"
                },
                {
                    "match": "\\}",
                    "name": "punctuation.brackets.curly.lushui"
                },
                {
                    "match": "[';]",
                    "name": "punctuation.lushui"
                }
            ],
            "__comment__": [
                "@Bug consecutive `-` not highlighted"
            ]
        },
        "text-literal": {
            "patterns": [
                {
                    "name": "string.quoted.double.lushui",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "include": "#escape_sequence"
                        }
                    ]
                }
            ]
        },
        "escape_sequence": {
            "name": "constant.character.escape.lushui",
            "match": "\\\\(u\\{[0-9a-fA-F]+\\}|\\\\|\")"
        },
        "entity": {
            "patterns": [
                {
                    "match": "\\b((?:[A-Z_]\\w*)(?:-[a-zA-Z_]\\w*)*)\\b",
                    "name": "storage.type.lushui"
                },
                {
                    "match": "(?<=\\b(?:let|module|as))\\s+((?:[a-z_]\\w*)(?:-[a-zA-Z_]\\w*)*)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.lushui"
                        }
                    }
                },
                {
                    "match": "\\b((?:[a-z_]\\w*)(?:-[a-zA-Z_]\\w*)*)\\s*(?=:[\\w\\s])",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.lushui"
                        }
                    }
                }
            ],
            "__comment__": [
                "@Task Remove the `entity.name.function` captures once semantic highlighting supports them"
            ]
        },
        "attribute": {
            "patterns": [
                {
                    "match": "(?<![\\.:+~=<>*^!?|/\\\\&#%$@])@\\s*(?:[a-zA-Z_]\\w*)(?:-[a-zA-Z_]\\w*)*\\b",
                    "name": "meta.attribute.lushui meta.annotation.lushui meta.decorator.lushui variable.language.lushui variable.annotation.lushui variable.other.lushui"
                },
                {
                    "match": "(?<![\\.:+~=<>*^!?|/\\\\&#%$@])@\\s*\\(.+?\\)",
                    "name": "meta.attribute.lushui meta.annotation.lushui meta.decorator.lushui variable.language.lushui variable.annotation.lushui variable.other.lushui"
                }
            ],
            "__comment": [
                "@Task Ideally merge those two rules",
                "@Task Make the second rule (bracketed attributes) stricter by requiring the attribute name to be a valid identifier"
            ]
        }
    }
}
