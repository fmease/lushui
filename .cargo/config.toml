[build]
# FIXME:
# While cargo#5034 has been fixed now with the introduction of lint tables, I failed to
# migrate the rules below to our virtual manifest. I tried `[workspace.lints.TOOL]` and
# setting the priority of lint groups to -1. However, the new rules were not respected
# (by Clippy at least). However, Cargo did clearly validate them, so there's that. Needs
# investigation.
rustflags = [
    "-Drust_2018_idioms",
    "-Dunused_must_use",
    "-Dimproper_ctypes_definitions",
    "-Dunused_crate_dependencies",
    "-Dclippy::all",
    "-Dclippy::pedantic",
    "-Aclippy::blocks_in_conditions",               # Too many false positives with rustfmt's style.
    "-Aclippy::empty_enum",                         # For type-level programming.
    "-Aclippy::enum_glob_use",                      # Alternative is too verbose.
    "-Aclippy::if_not_else",                        # Too opinionated & sometimes the negative case is the more common one.
    "-Aclippy::items_after_statements",             # Too opinionated.
    "-Aclippy::match_bool",                         # Too opinionated.
    "-Aclippy::missing_errors_doc",                 # Not a priority right now.
    "-Aclippy::missing_panics_doc",                 # FIXME: A churn to fix & not a priority right now.
    "-Aclippy::module_name_repetitions",            # Has many false positives & too opinionated.
    "-Aclippy::must_use_candidate",                 # FIXME: A churn to fix & not a priority right now.
    "-Aclippy::result_unit_err",                    # FIXME: Not a priority right now.
    "-Aclippy::return_self_not_must_use",           # FIXME: A churn to fix, not a priority right now.
    "-Aclippy::similar_names",                      # Too strict.
    "-Aclippy::struct_field_names",                 # Too many false positives.
    "-Aclippy::single_match_else",                  # Too opinionated, match exprs look better in many cases.
    "-Aclippy::struct_excessive_bools",             # Too many false postives with CLI flag structs.
    "-Aclippy::too_many_lines",                     # Too opinionated.
    "-Aclippy::trait_duplication_in_bounds",        # FIXME: False positives: rust-clippy#8757.
    "-Aclippy::redundant_closure_for_method_calls", # FIXME: False positives: rust-clippy#9335.
]

# Used by the GitHub CI workflow.
# This profile is necessary since the workflow cannot simply set the environment variables
# RUSTFLAGS and RUSTDOCFLAGS itself without overwriting the meticulously chosen flags set above!
# With profiles, those flags are inherited from / appended to the parent.
[profile.ci]
inherits = "release"
rustflags = ["-Dwarnings"]
# unsupported: cargo#10271
#rustdocflags = ["-Dwarnings", "--check", "-Zunstable-options"]

[registries.crates-io]
protocol = "sparse"
