;; Canonical non-dependent sum types and related functions.
module

use topmost.type.Type

;;; @Task better name for this type, module and constructors!

@public
data Either (A: Type) (B: Type): Type of
    first (A: Type) (B: Type): A -> Either A B
    second (A: Type) (B: Type): B -> Either A B

@public
use Either.(first second)
