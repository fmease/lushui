; Simple combinators working on and with functions.
module

@public
identity 'A (a: A): A = a

@public
constant 'A 'B (a: A) (b: B): A = a

# @Task write a more general version (wrt dependent typing)
@public
compose 'A 'B 'C
    (f: A -> B) (g: B -> C) (a: A): C
    =
    g (f a)

@public
flip 'A 'B 'C
    (f: A -> B -> C) (b: B) (a: A): C
    =
    f a b
