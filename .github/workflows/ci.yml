name: CI

on:
  push:
    # branches: [ master ]
  pull_request:
    # branches: [ master ]
  schedule:
    [cron: "0 0 1 * *"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  build-on-linux:
    name: Build on Linux (Ubuntu)

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: Swatinem/rust-cache@v1
    - name: Build in release mode
      run: cargo build --release

  build-on-windows:
    name: Build on Windows

    # disabled to reduce resource usage and since it's not as important right now
    if: false

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: Swatinem/rust-cache@v1
    - name: Build in release mode
      run: cargo build --release

  test-on-linux:
    name: Run tests on Linux (Ubuntu)

    needs: build-on-linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: Swatinem/rust-cache@v1
    - name: Run unit tests (via the rust testing framework)
      run: cargo test
    - name: Run UI tests (via the golden UI testing framework)
      run: ./test/ui/run

  test-on-windows:
    name: Run tests on Windows

    # disabled to reduce resource usage and since it's not as important right now
    if: false

    needs: build-on-windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: Swatinem/rust-cache@v1
    - name: Run unit tests (via the rust testing framework)
      run: cargo test
    - name: Run UI tests (via the golden UI testing framework)
      run: ./tests/ui/run

  build-documentation:
    name: Build Documentation (on Linux)

    needs: build-on-linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build documentation with rustdoc excluding dependencies
        run: cargo doc --no-deps

  clippy:
    name: Run Clippy (on Linux)

    needs: build-on-linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: clippy
    - uses: Swatinem/rust-cache@v1
    - name: Run Clippy
      run: cargo clippy --all-features

  formatting:
    name: Check Code Formatting

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt
    - uses: Swatinem/rust-cache@v1
    - name: Run rustfmt in check mode
      run: cargo fmt --check
