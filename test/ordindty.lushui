module core

use core.text.Text
use core.text

;; before-use: Nat = 34

Alpha: Type = Beta
Beta: Type = Alpha


;; Z2: Type = X ;; @Note type checks

data Whatever: Type =

;; F: Type = Whatever -> F
;; f: F = \(w: Whatever) => f

;; @Bug equi-recursion no supported
;; f: F = \(A: Type) => f

;; dude: It-S-Really-Crazy-Down-Here = 0
;; It-S-Really-Crazy-Down-Here: Type = It-S-Really-Crazy-Down-Here

f: Type = f

use core.nat.Nat
use core.nat

x: Nat = y
y: Nat = 23

;; circ: circ = circ

;; main: f = x

;; infinite-value: Nat = infinite-value

;; main: Nat = infinite-value
;; main: Nat = before-use
