identity (A: Type) (a: A): A = a

data Void: identity Type Type =

data Bar: Type =
    ;; below fails as it should
    ;; Crazy (A: Type): A
    Foo: Bar
    ;; works like a charm
    Ban: identity Type Bar

_foreign_
data Nat: Type

data List (A: Type): Type =
    Nil (A: Type): List A
    Cons (A: Type): A -> List A

data Ouw: Type =
    'Ouw: Ouw
    One: Ouw
    Two: Nat -> Ouw
