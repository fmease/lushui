;;; Our sandbox
data Nat': Type =
    Zero: Nat'
    Succ: Nat' -> Nat'

x: Type = Type

the (A: Type) (x: A): A = x

two: Nat' = Succ (Succ Zero)

n: Nat' = the Nat' (Succ (Succ Zero))
T: Type = Type


function (parameter: Nat'): Nat' = parameter

function': Nat' -> Nat' = function

apply (A: Type) (f: A -> A) (x: A): A = f x

;;; x': Nat' = apply Nat' function Zero
x': Nat' = apply Nat' function' Zero

the_nat: Nat' -> Nat' = the Nat'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

data Bool: Type =
    False: Bool
    True: Bool

constant (A B: Type) (a: A) (b: B): A = a

does_it_reduce_under_param (b: Bool): Bool = constant Bool Bool False b
