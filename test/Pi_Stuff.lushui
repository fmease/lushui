;;; Testing out pi-type-related bugs

'let identity (A: 'Type) (a: A): A = a

'data Void: identity 'Type 'Type =

;;; 'data Bar: 'Type =
;;;     ;;; Crazy (A: 'Type): A
;;;     Foo: Bar
;;;     ;;; @Beacon fixme does not compile (we need to re-normalize)
;;;     ;;; Ban: identity 'Type Bar

'data List (A: 'Type): 'Type =
    Nil (A: 'Type): List A
    Cons (A: 'Type): A -> List A

'data Ouw: 'Type =
    Ouw: Ouw
    ;;; One: Ouw
    ;;; One: 'Nat -> Ouw
