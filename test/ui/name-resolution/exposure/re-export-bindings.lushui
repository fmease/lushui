# TEST pass check

use extern.core.type.Type

use Identity as Alias
data Identity: Type of

@public use Point as *
@public data Point: Type of

@(public topmost) use Center as C
@(public component) data Center: Type of
# FIXME: (1) Currently, this would lead to a cycle error if this was placed between
#            the import of Type and the import of Identity as Alias.
#        (2) This is non-determinstic and flaky (across Rust versions) and likely
#            change 180Â° on the next bump.
#        (3) We need to replace our rather naive cycle detection code with proper
#            SCC computation to fix actually this.
use topmost as component # @Bug needs to be above the bindings below otherwise it gets flagged as circular

module namespace of
    T: topmost.Type = topmost.Type

    module subnamespace of
        @(public super)
        use super.T as T0

        @(public topmost.namespace.subnamespace)
        use super.T as T1
