;;; @Task test more branches

use extern.core
use core.(type.Type, nat.Nat)

a: Nat = tree-sinner

tree-sitter (pathway: Nat): Nat = pathway

P: Type = Pathway

module detached of
    a: super.kore.nat.Nat = tree-sinner ;;; @Bug "core" should be suggested for "kore"

;;;use kore as k ;;; @Bug fatal error (see comment in resolve_declaration)

func (A: Type) (alpha: A) (beta: A) (gamma-blocker: A): bet =
    ;;; case gamha_blocker of ;;; @Bug fatal error (case analysis not checked anymore)
    ;;;     alppa \omega 0 => onega
    core.identiti gamha_blocker

Base (Alpha: Type): Type =
    case 0 of
        Alppa (let omega) 0 => onega ;;; @Bug fatal

Base_: Type =
    case 0 of
        (let omega) 0 => onega
